/*
 * Outcarcerate
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * Charge
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2020-08-12T21:38:30.799+02:00")
public class Charge   {
  @JsonProperty("_id")
  private String _id = null;

  @JsonProperty("_rev")
  private String _rev = null;

  /**
   * Gets or Sets trialType
   */
  public enum TrialTypeEnum {
    GUILTY_PLEA("Guilty plea"),
    
    TRIAL_BY_JUDGE("Trial by judge"),
    
    TRIAL_BY_JURY("Trial by jury");

    private String value;

    TrialTypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TrialTypeEnum fromValue(String text) {
      for (TrialTypeEnum b : TrialTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("trial_type")
  private TrialTypeEnum trialType = null;

  /**
   * Gets or Sets chargeCode
   */
  public enum ChargeCodeEnum {
    ADMINISTRATION_OF_JUSTICE("Administration of Justice"),
    
    ANTITRUST("Antitrust"),
    
    ARSON("Arson"),
    
    BRIBERY_CORRUPTION("Bribery/Corruption"),
    
    BURGLARY_TRESPASS("Burglary/Trespass"),
    
    CHILD_PORNOGRAPHY("Child Pornography"),
    
    COMMERCIALIZED_VICE("Commercialized Vice"),
    
    DRUG_POSSESSION("Drug Possession"),
    
    DRUG_TRAFFICKING("Drug Trafficking"),
    
    ENVIRONMENTAL("Environmental"),
    
    EXTORTION_RACKETEERING("Extortion/Racketeering"),
    
    FIREARMS("Firearms"),
    
    FOOD_AND_DRUG("Food and Drug"),
    
    FORGERY_COUNTER_COPYRIGHT("Forgery/Counter/Copyright"),
    
    FRAUD_THEFT_EMBEZZLEMENT("Fraud/Theft/Embezzlement"),
    
    IMMIGRATION("Immigration"),
    
    INVIDUAL_RIGHTS("Invidual Rights"),
    
    KIDNAPPING("Kidnapping"),
    
    MANSLAUGHTER("Manslaughter"),
    
    MONEY_LAUNDERING("Money Laundering"),
    
    MURDER("Murder"),
    
    NATIONAL_DEFENSE("National Defense"),
    
    OBSCENITY_OTHER_SEX_OFFENSES("Obscenity/Other Sex Offenses"),
    
    PRISON_OFFENSES("Prison Offenses"),
    
    ROBBERY("Robbery"),
    
    SEXUAL_ABUSE("Sexual Abuse"),
    
    STALKING_HARASSING("Stalking/Harassing"),
    
    TAX("Tax"),
    
    OTHER("Other");

    private String value;

    ChargeCodeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChargeCodeEnum fromValue(String text) {
      for (ChargeCodeEnum b : ChargeCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("charge_code")
  private ChargeCodeEnum chargeCode = null;

  @JsonProperty("attempted")
  private String attempted = null;

  @JsonProperty("primary")
  private Boolean primary = null;

  /**
   * Gets or Sets sentenceType
   */
  public enum SentenceTypeEnum {
    PRISON_ONLY("Prison Only"),
    
    PRISON_AND_ALTERNATIVES("Prison and Alternatives"),
    
    PROBATION_ONLY("Probation Only"),
    
    PROBATION_AND_ALTERNATIVES("Probation and Alternatives"),
    
    FINE_ORDERED_NO_RESTITUTION("Fine Ordered/No Restitution"),
    
    RESTITUTION_ORDERED_NO_FINE("Restitution Ordered/No Fine"),
    
    BOTH_FINE_RESTITUTION_ORDERED("Both Fine & Restitution Ordered");

    private String value;

    SentenceTypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SentenceTypeEnum fromValue(String text) {
      for (SentenceTypeEnum b : SentenceTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("sentence_type")
  private SentenceTypeEnum sentenceType = null;

  @JsonProperty("minimum_incarceration_months")
  private Long minimumIncarcerationMonths = null;

  @JsonProperty("maximum_incarceration_months")
  private Long maximumIncarcerationMonths = null;

  @JsonProperty("probation_term_months")
  private Long probationTermMonths = null;

  @JsonProperty("fine_dollars")
  private Long fineDollars = null;

  @JsonProperty("community_service_hours")
  private Long communityServiceHours = null;

  @JsonProperty("alternative_sentence")
  private String alternativeSentence = null;

  @JsonProperty("suspended_sentence")
  private Boolean suspendedSentence = null;

  public Charge id(String id) {
    this._id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("_id")
  @ApiModelProperty(value = "")
  public String getId() {
    return _id;
  }

  public void setId(String id) {
    this._id = id;
  }

  public Charge rev(String rev) {
    this._rev = rev;
    return this;
  }

  /**
   * Get rev
   * @return rev
   **/
  @JsonProperty("_rev")
  @ApiModelProperty(value = "")
  public String getRev() {
    return _rev;
  }

  public void setRev(String rev) {
    this._rev = rev;
  }

  public Charge trialType(TrialTypeEnum trialType) {
    this.trialType = trialType;
    return this;
  }

  /**
   * Get trialType
   * @return trialType
   **/
  @JsonProperty("trial_type")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public TrialTypeEnum getTrialType() {
    return trialType;
  }

  public void setTrialType(TrialTypeEnum trialType) {
    this.trialType = trialType;
  }

  public Charge chargeCode(ChargeCodeEnum chargeCode) {
    this.chargeCode = chargeCode;
    return this;
  }

  /**
   * Get chargeCode
   * @return chargeCode
   **/
  @JsonProperty("charge_code")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public ChargeCodeEnum getChargeCode() {
    return chargeCode;
  }

  public void setChargeCode(ChargeCodeEnum chargeCode) {
    this.chargeCode = chargeCode;
  }

  public Charge attempted(String attempted) {
    this.attempted = attempted;
    return this;
  }

  /**
   * Get attempted
   * @return attempted
   **/
  @JsonProperty("attempted")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getAttempted() {
    return attempted;
  }

  public void setAttempted(String attempted) {
    this.attempted = attempted;
  }

  public Charge primary(Boolean primary) {
    this.primary = primary;
    return this;
  }

  /**
   * Get primary
   * @return primary
   **/
  @JsonProperty("primary")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Boolean isPrimary() {
    return primary;
  }

  public void setPrimary(Boolean primary) {
    this.primary = primary;
  }

  public Charge sentenceType(SentenceTypeEnum sentenceType) {
    this.sentenceType = sentenceType;
    return this;
  }

  /**
   * Get sentenceType
   * @return sentenceType
   **/
  @JsonProperty("sentence_type")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public SentenceTypeEnum getSentenceType() {
    return sentenceType;
  }

  public void setSentenceType(SentenceTypeEnum sentenceType) {
    this.sentenceType = sentenceType;
  }

  public Charge minimumIncarcerationMonths(Long minimumIncarcerationMonths) {
    this.minimumIncarcerationMonths = minimumIncarcerationMonths;
    return this;
  }

  /**
   * Get minimumIncarcerationMonths
   * @return minimumIncarcerationMonths
   **/
  @JsonProperty("minimum_incarceration_months")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getMinimumIncarcerationMonths() {
    return minimumIncarcerationMonths;
  }

  public void setMinimumIncarcerationMonths(Long minimumIncarcerationMonths) {
    this.minimumIncarcerationMonths = minimumIncarcerationMonths;
  }

  public Charge maximumIncarcerationMonths(Long maximumIncarcerationMonths) {
    this.maximumIncarcerationMonths = maximumIncarcerationMonths;
    return this;
  }

  /**
   * Get maximumIncarcerationMonths
   * @return maximumIncarcerationMonths
   **/
  @JsonProperty("maximum_incarceration_months")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getMaximumIncarcerationMonths() {
    return maximumIncarcerationMonths;
  }

  public void setMaximumIncarcerationMonths(Long maximumIncarcerationMonths) {
    this.maximumIncarcerationMonths = maximumIncarcerationMonths;
  }

  public Charge probationTermMonths(Long probationTermMonths) {
    this.probationTermMonths = probationTermMonths;
    return this;
  }

  /**
   * Get probationTermMonths
   * @return probationTermMonths
   **/
  @JsonProperty("probation_term_months")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getProbationTermMonths() {
    return probationTermMonths;
  }

  public void setProbationTermMonths(Long probationTermMonths) {
    this.probationTermMonths = probationTermMonths;
  }

  public Charge fineDollars(Long fineDollars) {
    this.fineDollars = fineDollars;
    return this;
  }

  /**
   * Get fineDollars
   * @return fineDollars
   **/
  @JsonProperty("fine_dollars")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getFineDollars() {
    return fineDollars;
  }

  public void setFineDollars(Long fineDollars) {
    this.fineDollars = fineDollars;
  }

  public Charge communityServiceHours(Long communityServiceHours) {
    this.communityServiceHours = communityServiceHours;
    return this;
  }

  /**
   * Get communityServiceHours
   * @return communityServiceHours
   **/
  @JsonProperty("community_service_hours")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Long getCommunityServiceHours() {
    return communityServiceHours;
  }

  public void setCommunityServiceHours(Long communityServiceHours) {
    this.communityServiceHours = communityServiceHours;
  }

  public Charge alternativeSentence(String alternativeSentence) {
    this.alternativeSentence = alternativeSentence;
    return this;
  }

  /**
   * Get alternativeSentence
   * @return alternativeSentence
   **/
  @JsonProperty("alternative_sentence")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getAlternativeSentence() {
    return alternativeSentence;
  }

  public void setAlternativeSentence(String alternativeSentence) {
    this.alternativeSentence = alternativeSentence;
  }

  public Charge suspendedSentence(Boolean suspendedSentence) {
    this.suspendedSentence = suspendedSentence;
    return this;
  }

  /**
   * Get suspendedSentence
   * @return suspendedSentence
   **/
  @JsonProperty("suspended_sentence")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Boolean isSuspendedSentence() {
    return suspendedSentence;
  }

  public void setSuspendedSentence(Boolean suspendedSentence) {
    this.suspendedSentence = suspendedSentence;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Charge charge = (Charge) o;
    return Objects.equals(this._id, charge._id) &&
        Objects.equals(this._rev, charge._rev) &&
        Objects.equals(this.trialType, charge.trialType) &&
        Objects.equals(this.chargeCode, charge.chargeCode) &&
        Objects.equals(this.attempted, charge.attempted) &&
        Objects.equals(this.primary, charge.primary) &&
        Objects.equals(this.sentenceType, charge.sentenceType) &&
        Objects.equals(this.minimumIncarcerationMonths, charge.minimumIncarcerationMonths) &&
        Objects.equals(this.maximumIncarcerationMonths, charge.maximumIncarcerationMonths) &&
        Objects.equals(this.probationTermMonths, charge.probationTermMonths) &&
        Objects.equals(this.fineDollars, charge.fineDollars) &&
        Objects.equals(this.communityServiceHours, charge.communityServiceHours) &&
        Objects.equals(this.alternativeSentence, charge.alternativeSentence) &&
        Objects.equals(this.suspendedSentence, charge.suspendedSentence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_id, _rev, trialType, chargeCode, attempted, primary, sentenceType, minimumIncarcerationMonths, maximumIncarcerationMonths, probationTermMonths, fineDollars, communityServiceHours, alternativeSentence, suspendedSentence);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Charge {\n");
    
    sb.append("    _id: ").append(toIndentedString(_id)).append("\n");
    sb.append("    _rev: ").append(toIndentedString(_rev)).append("\n");
    sb.append("    trialType: ").append(toIndentedString(trialType)).append("\n");
    sb.append("    chargeCode: ").append(toIndentedString(chargeCode)).append("\n");
    sb.append("    attempted: ").append(toIndentedString(attempted)).append("\n");
    sb.append("    primary: ").append(toIndentedString(primary)).append("\n");
    sb.append("    sentenceType: ").append(toIndentedString(sentenceType)).append("\n");
    sb.append("    minimumIncarcerationMonths: ").append(toIndentedString(minimumIncarcerationMonths)).append("\n");
    sb.append("    maximumIncarcerationMonths: ").append(toIndentedString(maximumIncarcerationMonths)).append("\n");
    sb.append("    probationTermMonths: ").append(toIndentedString(probationTermMonths)).append("\n");
    sb.append("    fineDollars: ").append(toIndentedString(fineDollars)).append("\n");
    sb.append("    communityServiceHours: ").append(toIndentedString(communityServiceHours)).append("\n");
    sb.append("    alternativeSentence: ").append(toIndentedString(alternativeSentence)).append("\n");
    sb.append("    suspendedSentence: ").append(toIndentedString(suspendedSentence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

