<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>call-for-code</groupId>
	<artifactId>open-sentencing-aggregator</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<!-- contains default pluginManagement configuration for liberty-maven-plugin -->
	<parent>
		<groupId>io.openliberty.tools</groupId>
		<artifactId>liberty-maven-app-parent</artifactId>
		<version>3.2.2</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>

		<swagger-core-version>1.5.18</swagger-core-version>
		<jetty-version>9.3.27.v20190418</jetty-version>
		<jersey2-version>2.22.2</jersey2-version>
		<jackson-version>2.10.1</jackson-version>
		<junit-version>4.12</junit-version>
		<logback-version>1.1.7</logback-version>
		<servlet-api-version>2.5</servlet-api-version>
		<okhttp-version>4.8.1</okhttp-version>
		<gson-version>2.8.6</gson-version>
		<jodatime-version>2.9.4.wso2v1</jodatime-version>

		<liberty.plugin.version>3.2.2</liberty.plugin.version>
		<app.name>javalibertyapp</app.name>
		<testServerHttpPort>9080</testServerHttpPort>
		<testServerHttpsPort>9443</testServerHttpsPort>
		<package.file>${project.build.directory}/${project.artifactId}-${project.version}.zip</package.file>
		<packaging.type>usr</packaging.type>
		<!-- Cloud Foundry/IBM Cloud properties -->
		<cf.context>mybluemix.net</cf.context>
		<cf.target>https://api.ng.bluemix.net</cf.target>
		<cf.space>dev</cf.space>
		<cf.context.root>${cf.host}.${cf.context}</cf.context.root>
		<cf.host>${app.name}</cf.host>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ibm.websphere.appserver.api</groupId>
			<artifactId>com.ibm.websphere.appserver.api.servlet</artifactId>
			<version>1.1.18</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ibm.websphere.appserver.api</groupId>
			<artifactId>com.ibm.websphere.appserver.api.jaxrs20</artifactId>
			<version>1.0.18</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.ibm.websphere.appserver.api</groupId>
			<artifactId>com.ibm.websphere.appserver.api.json</artifactId>
			<version>1.0.18</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile</groupId>
			<artifactId>microprofile</artifactId>
			<version>3.3</version>
			<scope>provided</scope>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.1.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.0.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudant</groupId>
			<artifactId>cloudant-client</artifactId>
			<version>2.19.1</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<scope>compile</scope>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<!-- Base64 encoding that works in both JVM and Android -->
		<dependency>
			<groupId>com.brsanthu</groupId>
			<artifactId>migbase64</artifactId>
			<version>2.2</version>
		</dependency>


		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp-version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>logging-interceptor</artifactId>
			<version>${okhttp-version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson-version}</version>
		</dependency>

		<dependency>
			<groupId>org.wso2.orbit.joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${jodatime-version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!--Camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>3.5.0</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>io.swagger</groupId> <artifactId>swagger-codegen-maven-plugin</artifactId> 
				<version>2.3.1</version> <executions> <execution> <goals> <goal>generate</goal> 
				</goals> <configuration> <inputSpec>${project.basedir}/src/main/resources/swagger.yaml</inputSpec> 
				<language>jaxrs</language> <configOptions> <sourceFolder>target/generated-sources/swagger/src/gen/java/main</sourceFolder> 
				<modelPropertyNaming>original</modelPropertyNaming> </configOptions> </configuration> 
				</execution> </executions> </plugin> -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Plugin to run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<executions>
					<execution>
						<phase>test</phase>
						<id>default-test</id>
						<configuration>
							<excludes>
								<exclude>**/it/**</exclude>
							</excludes>
							<reportsDirectory>${project.build.directory}/test-reports/unit</reportsDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Enable liberty-maven plugin -->
			<plugin>
				<groupId>io.openliberty.tools</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<version>${liberty.plugin.version}</version>
				<configuration>
					<assemblyArtifact>
						<groupId>com.ibm.websphere.appserver.runtime</groupId>
						<artifactId>wlp-webProfile7</artifactId>
						<version>[20.0.0.7,)</version>
						<type>zip</type>
					</assemblyArtifact>
					<configFile>${basedir}/src/main/liberty/config/server.xml</configFile>
					<serverEnv>${basedir}/src/main/liberty/config/server.env</serverEnv>
					<jvmOptionsFile>${basedir}/src/main/liberty/config/jvm.options</jvmOptionsFile>
					<packageFile>${package.file}</packageFile>
					<include>${packaging.type}</include>
					<bootstrapProperties>
						<app.location>${project.artifactId}-${project.version}.war</app.location>
						<default.http.port>${testServerHttpPort}</default.http.port>
						<default.https.port>${testServerHttpsPort}</default.https.port>
					</bootstrapProperties>
					<features>
						<acceptLicense>true</acceptLicense>
					</features>
					<looseApplication>false</looseApplication>
				</configuration>
			</plugin>
			<!-- Plugin to run functional tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18.1</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/it/**</include>
							</includes>
							<systemPropertyVariables>
								<liberty.test.port>${testServerHttpPort}</liberty.test.port>
								<war.context>${warContext}</war.context>
							</systemPropertyVariables>
						</configuration>
					</execution>
					<execution>
						<id>verify-results</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<summaryFile>${project.build.directory}/test-reports/it/failsafe-summary.xml</summaryFile>
					<reportsDirectory>${project.build.directory}/test-reports/it</reportsDirectory>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>target/generated-sources/swagger/target</directory>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>runnable</id>
			<properties>
				<package.file>${project.build.directory}/${app.name}.jar</package.file>
				<packaging.type>runnable</packaging.type>
			</properties>
		</profile>
		<profile>
			<id>bx-dev-build</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>net.wasdev.wlp.maven.plugins</groupId>
							<artifactId>liberty-maven-plugin</artifactId>
							<version>${liberty.plugin.version}</version>
							<configuration>
								<outputDirectory>/tmp/liberty</outputDirectory>
							</configuration>
							<executions>
								<execution>
									<id>install-feature</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>install-feature</goal>
									</goals>
									<configuration>
										<outputDirectory>/tmp/liberty</outputDirectory>
									</configuration>
								</execution>
								<execution>
									<id>package-server</id>
									<phase>package</phase>
									<goals>
										<goal>package-server</goal>
									</goals>
									<configuration>
										<outputDirectory>/tmp/liberty</outputDirectory>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>bluemix</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<id>enforce-bluemix-credentials</id>
								<phase>initialize</phase>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>cf.org</property>
											<message>The cf.org property must be
												provided with the bluemix
												profile.</message>
										</requireProperty>
										<requireProperty>
											<property>cf.username</property>
											<message>The cf.username property
												must be provided with the
												bluemix profile.</message>
										</requireProperty>
										<requireProperty>
											<property>cf.password</property>
											<message>The cf.password property
												must be provided with the
												bluemix profile.</message>
										</requireProperty>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.cloudfoundry</groupId>
						<artifactId>cf-maven-plugin</artifactId>
						<version>1.1.3</version>
						<configuration>
							<target>${cf.target}</target>
							<org>${cf.org}</org>
							<space>${cf.space}</space>
							<username>${cf.username}</username>
							<password>${cf.password}</password>
							<appname>${cf.host}</appname>
							<memory>512</memory>
						</configuration>
						<executions>
							<execution>
								<id>push</id>
								<phase>package</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<path>${package.file}</path>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
